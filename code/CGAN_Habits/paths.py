import datetime
import os

from CGAN_Habits.hyperparam import Hyperparam

class Paths():

    def __init__(self, key):
        currentDT = datetime.datetime.now()
        trial = Hyperparam.trial_folder_prefix + str(currentDT.year) + str(currentDT.month) + str(currentDT.day) + str(
            currentDT.hour) + str(currentDT.minute)

        self.currentDT=currentDT
        self.trial=trial

        self.raw_input_path = "raw_input/"

        self.training_runs_path = "training_runs/"

        self.code_path = "code/"

        self.synth_habits_path = "synth_output/habits/"

        if key == 'train':
            if not os.path.exists(self.training_runs_path + trial):
                os.makedirs(self.training_runs_path + trial)
            current_dir = self.training_runs_path + trial
            self.current_path = current_dir + "/"
        elif key == 'generate':
            if not os.path.exists(self.synth_habits_path + trial):
                os.makedirs(self.synth_habits_path + trial)
            current_dir = self.synth_habits_path + trial
            self.current_path = current_dir + "/"
        else:
            print('Please enter valid key i.e. "train" or "generate"')



    real_habits_fn='real_habits.csv'
    kde_habits_fn='synth_kde_habits.csv'
    synth_habits_fn='synth_gan_habits.csv'
    loss_fn='loss.csv'
    mmd_fn='mmd.csv'
    model_fn='/habits_model/habits.ckpt'

    loss_fig='loss.png'
    mmd_fig='mmd.png'


    """# Enter Input Folder that contains patterns dataset generated by matched filter"""
    def enter_input_folder4train(self):
        print('Enter the training_runs folder (P-Prefix) that contains filtered_patterns.csv:')
        input_folder = input()
        print('Reference Input Files exists in: ' + input_folder)
        return self.training_runs_path + input_folder + "/"

    def enter_input_folder4gen(self):
        print('Enter training_runs folder (H-Prefix) that contains habits model:')
        input_folder = input()
        print('Reference Input Files exists in: ' + input_folder)
        return self.training_runs_path + input_folder + "/"